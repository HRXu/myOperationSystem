;核心程序
;0.1.0816.2035
;=========================================
;宏定义区
%define	printf	   0820h:0000h
%define	Mprintf    0860h:0000h
%define fileSystemInit 0880h:0000h
%define	list	08A0h:0000h
%define	readDisk	0840h:0000h
;----------------------------------------------------------	
	jmp	   entry
;----------------------------------------------------------
dataSegment:
msg:		
        DB	"Initializing System"    
msgret: DB	0x0a,0x0d,0	;回车换行,结束符
msg2:
	DB	"Hello world!"	
	DB	0x0a,0x0d,0
title:	
	DB	0x0a,0x0d	
	DB	">"
	DB	0
NoFileErrMsg:
	DB	"No such program or file"	
	DB	0
;=====用于比较的字符串=====
echo:
	DB	"echo"
	DB	0	
mbr:
	DB	"mbr"
	DB	0	
fss:
	DB	"fss"	
	DB	0
ls:
	DB	"ls"	
	DB	0
test:
	DB	"test"	
	DB	0
;键盘输入缓冲区
buffer:
	times	32 DB 0
;----------------------------------------------------------
;程序起始
;初始化数据段
entry:
        MOV        AX,0800h 
        MOV        DS,AX
	MOV	   ES,AX

;初始化堆栈区
	MOV	AX,0x07e0
	MOV	SS,AX	
	MOV	SP,0x01FE
	MOV	BP,SP

	;//初始化完成
        mov	SI,msg
	call	printf

;加载文件系统
	call	fileSystemInit
	
;----------------shell v0.2-------------------------

;输入到键盘缓冲区
core:		
	mov	SI,title
	call	printf

	mov	SI,buffer
	mov	cx,32	;清空缓冲区
clsBuf:	mov	[SI],byte 0
	inc	SI
	loop	clsBuf	

	mov	SI,buffer;输入
la3:	mov	AX,0
	int	16h
	
	cmp	AL,0x0a
	jz	la2
	cmp	AL,0x0d
	jz	la2	;遇到回车则结束输入

	call	print	;输出当前字符
	mov	[SI],AL
	inc	SI
	jmp	la3

;按输入查找对应程序,BL存放字符串，SI存放缓冲区指针
la2:
	mov	SI,msgret
	call	printf	;换行

	mov	SI,buffer
	mov	BX,echo
	call	compare
	cmp	AL,0
	jnz	process2

	mov	SI,buffer
	mov	BX,mbr
	call	compare
	cmp	AL,0
	jnz	process1

	mov	SI,buffer
	mov	BX,fss
	call	compare
	cmp	AL,0
	jnz	process3

	mov	SI,buffer
	mov	BX,ls
	call	compare
	cmp	AL,0
	jnz	process4

	mov	SI,buffer
	mov	BX,test
	call	compare
	cmp	AL,0
	jnz	process5


	mov	SI,NoFileErrMsg
	call	printf
	
	jmp	core

process1:;====mbr:显示MBR扇区====		
        mov	AX,0x7d0
	mov	BX,0
	call	Mprintf
	jmp	end

process2:;====echo====
        mov	SI,msg2
	call	printf
	jmp	end

process3:;====fss:显示内存中的文件系统头====
        mov	AX,0x980
	mov	BX,0
	call	Mprintf
	jmp	end

process4:;====ls:显示当前文件列表====
	call	list
	jmp	end

process5:;====test:测试用====
	call	readDisk
	jmp	end

end:    JMP        core            ; 无限循环

;---显示函数,显示Al内容---
print:
	push	BX
	push	AX
        MOV	AH,0x0e         ; 显示一个文字
        MOV	BX,15           ; 指定字符颜色
        INT	0x10            ; 调用显卡BIOS
	pop	AX
	pop	BX
	ret

;----比较字符串，BL，SI指向要对比的字符串----
;----AL返回结果，非零为相等----
compare:
	push	DX
	mov	AL,0
cola:	mov	DH,[BX]
	mov	DL,[SI]

	cmp	DH,DL
	jnz	co_end
	inc	BX
	inc	SI
	mov	DH,[BX]
	mov	DL,[SI]
	cmp	DH,0
	jz	co_end2
	cmp	DL,0
	jz	co_end2
	jmp	cola
	
co_end:	pop	DX
	ret
co_end2:mov	AL,1
	pop	DX
	ret
;----------------------------------------------------------
	times	512-($-$$) DB 0